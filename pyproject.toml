[project]
name = "dynamic_routing_analysis"
version = "0.1.0"
description = "Tools for accessing, processing and presenting data from Dynamic Routing experiments."
authors = [
    {name = "Ben Hardcastle", email = "ben.hardcastle@alleninstitute.org"},
    {name = "Ethan McBride", email = "ethan.mcbride@alleninstitute.org"},
]
dependencies = [
    "numpy>=1.24.4",
    "pandas>=2.0.3",
    "matplotlib>=3.7.2",
    "pynwb>=2.3.3",
    "nwbwidgets>=0.11.3",
]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
]

[project.scripts]
# package files specified here will be turned into executables, callable from the command line without an active venv

[project.urls]
Repository = "https://github.com/AllenInstitute/dynamic_routing_analysis"
Issues = "https://github.com/AllenInstitute/dynamic_routing_analysis/issues"

[project.optional-dependencies]
dev = [
    "mypy>=1.4.1",
    "pytest>=7.4.0",
    "ruff>=0.0.279",
    "coverage[toml]>=7.2.2",
    "pytest-cov>=4.0.0",
    "bump>=1.3.2",
    "types-backports>=0.1.3",
]

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
ignore-init-module-imports = true

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
]

doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]

testpaths = [
    "tests",
    "src",
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["*__init__*"]

[tool.coverage.report]
show_missing = true

[tool.pdm.scripts]
# usage: pdm run <script> [args]
format = "ruff check src --fix-only"
test = {composite = ["mypy src", "pytest --cov"]}
bump = "bump -p pyproject.toml"
pre = {composite = ["pdm format", "pdm test"]}
pub = {composite = ["pdm pre", "pdm bump", "pdm publish"]}